{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username of the administrator account of VM-Series"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the administrator account of VM-Series"
      }
    },    
    "srcIPInboundNSG": {
       "type": "string",
       "metadata": {
           "description": "Your source public IP address. Added to the inbound NSG on eth0 (MGMT)"
       },
       "defaultValue": "0.0.0.0/0"
    },
    "dnsLabelPrefix": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },    
    "virtualNetworkName": { 
      "type": "string",
      "metadata": {
        "description": "Name of the Virtual Network (VNET)"
      },
      "defaultValue": "PA-Vnet"
    },
    "addressPrefix": {
      "type": "string",
      "defaultValue": "10.9.0.0/16",
      "metadata": {
        "description": "Virtual network address CIDR"
      }
    },
    "subnet0Name": {
      "type": "string",
      "defaultValue": "subnet1",
      "metadata": {
        "description": "Subnet for Management"
      }
    },
    "subnet1Name": {
      "type": "string",
      "defaultValue": "subnet2",
      "metadata": {
        "description": "Subnet for Untrust"
      }
    },
    "subnet2Name": {
      "type": "string",
      "defaultValue": "subnet3",
      "metadata": {
        "description": "Subnet for Trust"
      }
    },
    "subnet0Prefix": {
      "type": "string",
      "defaultValue": "10.9.0.0/24",
      "metadata": {
        "description": "Mgmt subnet CIDR"
      }
    },
    "subnet1Prefix": {
      "type": "string",
      "defaultValue": "10.9.1.0/24",
      "metadata": {
        "description": "Untrust subnet CIDR"
      }
    },
    "subnet2Prefix": {
      "type": "string",
      "defaultValue": "10.9.2.0/24",
      "metadata": {
        "description": "Trust subnet CIDR"
      }
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Name prefix of the new storage account created to store the VM's disks"
      }
    },
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "Name of VM-Series VM in the Azure portal"
      },
      "defaultValue": "VM-Series"
    },
    "vmSize": {
       "type": "string",
       "allowedValues": [
          "Standard_D3",
          "Standard_D4",
          "Standard_D3_v2",
          "Standard_D4_v2",
          "Standard_D5_v2",
          "Standard_A4"
       ],
       "metadata": {
          "description": "Azure VM size for VM-Series"
       },
       "defaultValue": "Standard_D3_v2"
    },
    "publicIPAddressName": {
      "type": "string",
      "metadata": {
        "description": "Name of the public IP resource"
      }
    }    
  },
  "variables": {
    "nsgName" : "DefaultNSG",  
    "imagePublisher": "paloaltonetworks",
    "imageOffer": "vmseries1",
    "imageSku" : "byol",
    "storageAccountType" : "Standard_LRS",
    "vmStorageAccountContainerName" : "vhd",
    "OSDiskName" : "[concat(parameters('vmName'),'-osDisk')]", 
    "nicName0": "[concat(parameters('vmName'), '-', parameters('publicIPAddressName'), '-eth0')]",
    "nicName1": "[concat(parameters('vmName'), '-', parameters('publicIPAddressName'), '-eth1')]",
    "nicName2": "[concat(parameters('vmName'), '-', parameters('publicIPAddressName'), '-eth2')]",
    "publicIPAddressType": "Dynamic",
    "virtualNetworkName": "[parameters('virtualNetworkName')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnet0Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet0Name'))]",
    "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet1Name'))]",
    "subnet2Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet2Name'))]"
  },
  "resources": [
    {
      "apiVersion": "2016-01-01",    
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('storageAccountName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[variables('storageAccountType')]"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsgName')]",
      "location": "[resourceGroup().location]",
      "properties": {
            "securityRules": [{
                "name": "Allow-Outside-From-IP",
                "properties": {
                    "description": "Rule",
                    "protocol": "*",
                    "sourcePortRange": "*",
                    "destinationPortRange": "*",
                    "sourceAddressPrefix": "[parameters('srcIPInboundNSG')]",
                    "destinationAddressPrefix": "*",
                    "access": "Allow",
                    "priority": 100,
                    "direction": "Inbound"
                }
            }, {
                "name": "Allow-Intra",
                "properties": {
                    "description": "Allow intra network traffic",
                    "protocol": "*",
                    "sourcePortRange": "*",
                    "destinationPortRange": "*",
                    "sourceAddressPrefix": "[parameters('addressPrefix')]",
                    "destinationAddressPrefix": "*",
                    "access": "Allow",
                    "priority": 101,
                    "direction": "Inbound"
                }
            }, {
                "name": "Default-Deny",
                "properties": {
                    "description": "Default-Deny if we don't match Allow rule",
                    "protocol": "*",
                    "sourcePortRange": "*",
                    "destinationPortRange": "*",
                    "sourceAddressPrefix": "*",
                    "destinationAddressPrefix": "*",
                    "access": "Deny",
                    "priority": 200,
                    "direction": "Inbound"
                }
            }]
        }
    },    
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsLabelPrefix')]"
        }
      }
    },
    {
      "apiVersion": "2018-04-01",
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "name": "[concat(variables('virtualNetworkName'), '/', parameters('subnet0Name'))]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]"
      ],  
      "properties": {
          "addressPrefix": "[parameters('subnet0Prefix')]",
          "networkSecurityGroup": {
              "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
          }              
      },
      "apiVersion": "2018-04-01",
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "name": "[concat(variables('virtualNetworkName'), '/', parameters('subnet1Name'))]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]"
      ],  
      "properties": {
          "addressPrefix": "[parameters('subnet1Prefix')]",
          "networkSecurityGroup": {
              "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
          }              
      },
      "apiVersion": "2018-04-01",
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "name": "[concat(variables('virtualNetworkName'), '/', parameters('subnet2Name'))]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]"
      ],  
      "properties": {
          "addressPrefix": "[parameters('subnet2Prefix')]",
          "networkSecurityGroup": {
              "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
          }              
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName0')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses/', parameters('publicIPAddressName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig0",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnet0Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName1')]",
      "location": "[resourceGroup().location]",
      "properties": {
      "enableIPForwarding": true,      
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('subnet1Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName2')]",
      "location": "[resourceGroup().location]",
      "properties": {
      "enableIPForwarding": true,            
        "ipConfigurations": [
          {
            "name": "ipconfig2",
            "properties": {
              "subnet": {
                "id": "[variables('subnet2Ref')]"
              }
            }
          }
        ]
      }
    },    
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName0'))]",
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName1'))]",
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName2'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "latest"
          },    
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/', variables('OSDiskName'), '.vhd')]"                            
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
    },          
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName0'))]",
              "properties": {
                  "primary": true
              }
            }, {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName1'))]",
              "properties": {
                  "primary": false
              }
            }, {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName2'))]",
               "properties": {
                  "primary": false
              }
            }            
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName')), '2016-01-01').primaryEndpoints.blob)]"
          }
        }
      }
    }
  ]
}